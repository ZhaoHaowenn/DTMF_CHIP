/*
 *      CONFIDENTIAL AND PROPRIETARY SOFTWARE/DATA OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2003 Artisan Components, Inc.  All Rights Reserved.
 *      
 *      Use of this Software/Data is subject to the terms and conditions of
 *      the applicable license agreement between Artisan Components, Inc. and
 *      Taiwan Semiconductor Manufacturing Company Ltd..  In addition, this Software/Data
 *      is protected by copyright law and international treaties.
 *      
 *      The copyright notice(s) in this Software/Data does not indicate actual
 *      or intended publication of this Software/Data.
 *      name:			SRAM-SP-HS SRAM Generator
 *           			TSMC CL018G Process
 *      version:		2002Q2V0
 *      comment:		
 *      configuration:	 -instname "ram_256x16A" -words 256 -bits 16 -frequency 250 -ring_width 2 -mux 16 -drive 12 -write_mask off -wp_size 8 -top_layer met6 -power_type rings -horiz met3 -vert met4 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -libname "ram_256x16A"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   ram_256x16A
 *      Instance Name:  ram_256x16A
 *      Words:          256
 *      Word Width:     16
 *      Mux:            16
 *      Pipeline:       No
 *      Process:        fast
 *      Delays:		min
 *
 *      Creation Date:  2003-01-20 15:24:18Z
 *      Version:        2002Q2V0
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(ram_256x16A) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2003-01-20 15:24:18Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2003 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(fast) {
		process	 : 1;
		temperature	 : 0.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : fast;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(ram_256x16A_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256x16A_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(ram_256x16A_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(ram_256x16A_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (ram_256x16A_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (ram_256x16A_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 8;
		bit_from : 7;
		bit_to : 0 ;
		downto : true ;
	}
cell(ram_256x16A) {
	area		 : 94881.242;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 8;
		word_width : 16;
	}
	bus(Q)	 {
		bus_type : ram_256x16A_DATA;
		direction : output;
		max_capacitance : 3.419;
		capacitance : 0.019;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.737, 0.745, 0.766, 0.808, 0.879, 1.091, 1.312", \
			  "0.736, 0.745, 0.765, 0.807, 0.878, 1.091, 1.312", \
			  "0.734, 0.742, 0.762, 0.805, 0.876, 1.088, 1.309", \
			  "0.729, 0.737, 0.757, 0.800, 0.870, 1.083, 1.304", \
			  "0.720, 0.729, 0.749, 0.791, 0.862, 1.075, 1.296", \
			  "0.712, 0.720, 0.740, 0.782, 0.853, 1.066, 1.287", \
			  "0.703, 0.711, 0.732, 0.774, 0.845, 1.057, 1.278" \
			)
			}
			rise_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.037, 0.062, 0.136, 0.289, 0.547, 1.321, 2.126")
			}
			cell_fall(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.737, 0.745, 0.766, 0.808, 0.879, 1.091, 1.312", \
			  "0.736, 0.745, 0.765, 0.807, 0.878, 1.091, 1.312", \
			  "0.734, 0.742, 0.762, 0.805, 0.876, 1.088, 1.309", \
			  "0.729, 0.737, 0.757, 0.800, 0.870, 1.083, 1.304", \
			  "0.720, 0.729, 0.749, 0.791, 0.862, 1.075, 1.296", \
			  "0.712, 0.720, 0.740, 0.782, 0.853, 1.066, 1.287", \
			  "0.703, 0.711, 0.732, 0.774, 0.845, 1.057, 1.278" \
			)
			}
			fall_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.025, 0.037, 0.074, 0.151, 0.280, 0.666, 1.068")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.356, 0.367, 0.399, 0.435, 0.435, 0.435, 0.435", \
			  "0.361, 0.372, 0.405, 0.434, 0.434, 0.434, 0.434", \
			  "0.382, 0.392, 0.425, 0.430, 0.430, 0.430, 0.430", \
			  "0.422, 0.424, 0.424, 0.424, 0.424, 0.424, 0.424", \
			  "0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412", \
			  "0.401, 0.401, 0.401, 0.401, 0.401, 0.401, 0.401", \
			  "0.389, 0.389, 0.389, 0.389, 0.389, 0.389, 0.389" \
			)
                       }
			rise_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.037, 0.062, 0.136, 0.289, 0.547, 1.321, 2.126")
			}
			cell_fall(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.315, 0.321, 0.342, 0.384, 0.435, 0.435, 0.435", \
			  "0.320, 0.327, 0.347, 0.389, 0.434, 0.434, 0.434", \
			  "0.340, 0.347, 0.367, 0.410, 0.430, 0.430, 0.430", \
			  "0.381, 0.388, 0.408, 0.424, 0.424, 0.424, 0.424", \
			  "0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412", \
			  "0.401, 0.401, 0.401, 0.401, 0.401, 0.401, 0.401", \
			  "0.389, 0.389, 0.389, 0.389, 0.389, 0.389, 0.389" \
			)
			}
			fall_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.025, 0.037, 0.074, 0.151, 0.280, 0.666, 1.068")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.356, 0.367, 0.399, 0.435, 0.435, 0.435, 0.435", \
			  "0.361, 0.372, 0.405, 0.434, 0.434, 0.434, 0.434", \
			  "0.382, 0.392, 0.425, 0.430, 0.430, 0.430, 0.430", \
			  "0.422, 0.424, 0.424, 0.424, 0.424, 0.424, 0.424", \
			  "0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412", \
			  "0.401, 0.401, 0.401, 0.401, 0.401, 0.401, 0.401", \
			  "0.389, 0.389, 0.389, 0.389, 0.389, 0.389, 0.389" \
			)
                       }
			rise_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.037, 0.062, 0.136, 0.289, 0.547, 1.321, 2.126")
			}
			cell_fall(ram_256x16A_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ( \
			  "0.315, 0.321, 0.342, 0.384, 0.435, 0.435, 0.435", \
			  "0.320, 0.327, 0.347, 0.389, 0.434, 0.434, 0.434", \
			  "0.340, 0.347, 0.367, 0.410, 0.430, 0.430, 0.430", \
			  "0.381, 0.388, 0.408, 0.424, 0.424, 0.424, 0.424", \
			  "0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412", \
			  "0.401, 0.401, 0.401, 0.401, 0.401, 0.401, 0.401", \
			  "0.389, 0.389, 0.389, 0.389, 0.389, 0.389, 0.389" \
			)
			}
			fall_transition(ram_256x16A_load_template) {
			index_1 ("0.019, 0.059, 0.179, 0.429, 0.849, 2.109, 3.419");
			values ("0.025, 0.037, 0.074, 0.151, 0.280, 0.666, 1.068")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.264
		clock	: true;
		min_pulse_width_low	: 0.112;
		min_pulse_width_high	: 0.083;
		min_period		: 0.772;
		max_transition		: 2.000;
		internal_power(){
			when : "!CEN & WEN";
        		rise_power(ram_256x16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("148.332, 148.332")
        		}
        		fall_power(ram_256x16A_passive_energy_template_1x2) {
				index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
			when : "!CEN & !WEN";
			rise_power(ram_256x16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
	    			values ("170.152, 170.152")
			}	
			fall_power(ram_256x16A_passive_energy_template_1x2) {
	    			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
			}	
		}
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.278, 0.276, 0.269, 0.254, 0.301, 0.359, 0.417", \
			  "0.279, 0.277, 0.269, 0.255, 0.302, 0.360, 0.418", \
			  "0.281, 0.279, 0.272, 0.257, 0.304, 0.362, 0.421", \
			  "0.286, 0.284, 0.277, 0.262, 0.309, 0.368, 0.426", \
			  "0.295, 0.293, 0.286, 0.271, 0.318, 0.376, 0.434", \
			  "0.303, 0.301, 0.294, 0.279, 0.326, 0.385, 0.443", \
			  "0.312, 0.310, 0.303, 0.288, 0.335, 0.393, 0.451" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.278, 0.276, 0.269, 0.254, 0.301, 0.359, 0.417", \
			  "0.279, 0.277, 0.269, 0.255, 0.302, 0.360, 0.418", \
			  "0.281, 0.279, 0.272, 0.257, 0.304, 0.362, 0.421", \
			  "0.286, 0.284, 0.277, 0.262, 0.309, 0.368, 0.426", \
			  "0.295, 0.293, 0.286, 0.271, 0.318, 0.376, 0.434", \
			  "0.303, 0.301, 0.294, 0.279, 0.326, 0.385, 0.443", \
			  "0.312, 0.310, 0.303, 0.288, 0.335, 0.393, 0.451" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.018, 0.043, 0.068", \
			  "0.000, 0.000, 0.000, 0.000, 0.018, 0.042, 0.067", \
			  "0.000, 0.000, 0.000, 0.000, 0.015, 0.040, 0.064", \
			  "0.000, 0.000, 0.000, 0.000, 0.010, 0.035, 0.059", \
			  "0.000, 0.000, 0.000, 0.000, 0.002, 0.026, 0.051", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.018, 0.042", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.009, 0.034" \
			)
				
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.018, 0.043, 0.068", \
			  "0.000, 0.000, 0.000, 0.000, 0.018, 0.042, 0.067", \
			  "0.000, 0.000, 0.000, 0.000, 0.015, 0.040, 0.064", \
			  "0.000, 0.000, 0.000, 0.000, 0.010, 0.035, 0.059", \
			  "0.000, 0.000, 0.000, 0.000, 0.002, 0.026, 0.051", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.018, 0.042", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.009, 0.034" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	pin(WEN) {
		direction : input;
		capacitance : 0.015;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.256, 0.261, 0.279, 0.315, 0.375, 0.435, 0.495", \
			  "0.257, 0.262, 0.280, 0.316, 0.376, 0.436, 0.496", \
			  "0.259, 0.264, 0.282, 0.318, 0.378, 0.439, 0.499", \
			  "0.264, 0.269, 0.287, 0.323, 0.384, 0.444, 0.504", \
			  "0.273, 0.278, 0.296, 0.332, 0.392, 0.452, 0.512", \
			  "0.282, 0.286, 0.304, 0.341, 0.401, 0.461, 0.521", \
			  "0.290, 0.295, 0.313, 0.349, 0.409, 0.469, 0.529" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.256, 0.261, 0.279, 0.315, 0.375, 0.435, 0.495", \
			  "0.257, 0.262, 0.280, 0.316, 0.376, 0.436, 0.496", \
			  "0.259, 0.264, 0.282, 0.318, 0.378, 0.439, 0.499", \
			  "0.264, 0.269, 0.287, 0.323, 0.384, 0.444, 0.504", \
			  "0.273, 0.278, 0.296, 0.332, 0.392, 0.452, 0.512", \
			  "0.282, 0.286, 0.304, 0.341, 0.401, 0.461, 0.521", \
			  "0.290, 0.295, 0.313, 0.349, 0.409, 0.469, 0.529" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : ram_256x16A_ADDRESS;
		direction : input;
		capacitance : 0.053;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.231, 0.229, 0.223, 0.210, 0.235, 0.278, 0.320", \
			  "0.231, 0.230, 0.223, 0.210, 0.236, 0.279, 0.321", \
			  "0.234, 0.232, 0.226, 0.213, 0.239, 0.281, 0.324", \
			  "0.239, 0.237, 0.231, 0.218, 0.244, 0.286, 0.329", \
			  "0.248, 0.246, 0.239, 0.226, 0.252, 0.295, 0.337", \
			  "0.256, 0.255, 0.248, 0.235, 0.261, 0.303, 0.346", \
			  "0.265, 0.263, 0.257, 0.244, 0.269, 0.312, 0.354" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.231, 0.229, 0.223, 0.210, 0.235, 0.278, 0.320", \
			  "0.231, 0.230, 0.223, 0.210, 0.236, 0.279, 0.321", \
			  "0.234, 0.232, 0.226, 0.213, 0.239, 0.281, 0.324", \
			  "0.239, 0.237, 0.231, 0.218, 0.244, 0.286, 0.329", \
			  "0.248, 0.246, 0.239, 0.226, 0.252, 0.295, 0.337", \
			  "0.256, 0.255, 0.248, 0.235, 0.261, 0.303, 0.346", \
			  "0.265, 0.263, 0.257, 0.244, 0.269, 0.312, 0.354" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.033, 0.035, 0.042, 0.055, 0.076, 0.098, 0.120", \
			  "0.033, 0.034, 0.041, 0.054, 0.076, 0.097, 0.119", \
			  "0.030, 0.032, 0.038, 0.051, 0.073, 0.095, 0.116", \
			  "0.025, 0.027, 0.033, 0.046, 0.068, 0.089, 0.111", \
			  "0.016, 0.018, 0.025, 0.038, 0.059, 0.081, 0.103", \
			  "0.008, 0.010, 0.016, 0.029, 0.051, 0.072, 0.094", \
			  "0.000, 0.001, 0.007, 0.021, 0.042, 0.064, 0.086" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.026, 0.022, 0.009, 0.000, 0.000, 0.000, 0.000", \
			  "0.025, 0.021, 0.009, 0.000, 0.000, 0.000, 0.000", \
			  "0.022, 0.019, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.017, 0.014, 0.001, 0.000, 0.000, 0.000, 0.000", \
			  "0.009, 0.005, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
	}	}	}
	bus(D)	 {
		bus_type : ram_256x16A_DATA;
		direction : input;
		capacitance : 0.004;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.144, 0.142, 0.133, 0.166, 0.240, 0.314, 0.387", \
			  "0.145, 0.143, 0.134, 0.167, 0.241, 0.314, 0.388", \
			  "0.148, 0.145, 0.137, 0.169, 0.243, 0.317, 0.391", \
			  "0.153, 0.150, 0.142, 0.175, 0.248, 0.322, 0.396", \
			  "0.161, 0.159, 0.150, 0.183, 0.257, 0.331, 0.404", \
			  "0.170, 0.167, 0.159, 0.192, 0.265, 0.339, 0.413", \
			  "0.178, 0.176, 0.167, 0.200, 0.274, 0.348, 0.421" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.144, 0.142, 0.133, 0.166, 0.240, 0.314, 0.387", \
			  "0.145, 0.143, 0.134, 0.167, 0.241, 0.314, 0.388", \
			  "0.148, 0.145, 0.137, 0.169, 0.243, 0.317, 0.391", \
			  "0.153, 0.150, 0.142, 0.175, 0.248, 0.322, 0.396", \
			  "0.161, 0.159, 0.150, 0.183, 0.257, 0.331, 0.404", \
			  "0.170, 0.167, 0.159, 0.192, 0.265, 0.339, 0.413", \
			  "0.178, 0.176, 0.167, 0.200, 0.274, 0.348, 0.421" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.003, 0.031", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.002, 0.030", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.028", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.023", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.014", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
			}
			fall_constraint(ram_256x16A_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.003, 0.031", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.002, 0.030", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.028", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.023", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.014", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.006", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
			)
		}	}
	}

	cell_leakage_power : 0.000;
  }
}
